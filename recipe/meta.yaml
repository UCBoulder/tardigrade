package:
  name: tardigrade
  # TODO: setup and use pyproject.toml and a Conda build Jinja template
  version: {{ VERSION }}

about:
  home: https://github.com/lanl/tardigrade
  license: BSD-3-Clause
  license_file: LICENSE
  summary: 'Capability for teh simulation of micromorphic continuum mechanics problems'
  description: |
    tardigrade (C20048 Tardigrade) An implementation of micromorphic continuum mechanics in the style of Eringen which has application when the microstructure is of a non-infinitesimal size when compared to the macroscale. Such materials could include, but are not limited to, granular materials such as sand and gravel, additively manufactured materials, or composite structures.
  doc_url: https://lanl.github.io/tardigrade
  dev_url: https://github.com/lanl/tardigrade

source:
  path: '..'

build:
  number: 0
  script_env:
    - SETUPTOOLS_SCM_PRETEND_VERSION={{ VERSION }}
  script:
    - mkdir build-package
    - cd build-package
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_LIBDIR=lib -DMOOSE_INSTALL_PREFIX=${PREFIX}
    - cmake --build . --target tardigrade
    - cmake --install . --prefix ${PREFIX}
  ignore_run_exports:
    - python_abi

requirements:
  host:
    - {{ compiler('cxx') }}
    - libgcc-ng {{ libstdcxx }}     # [linux]
    - libstdcxx-ng {{ libstdcxx }}  # [linux]
    - python
    - setuptools_scm >=6.2
    - cmake >=3.18
    - eigen >=3.3.7
    - tardigrade_micromorphic_element >=1.4
    - moose-dev
    - boost >=1.59  # TODO: Separate the package/test configuration to make BOOST an optional build dependency
    - doxygen  # TODO: Separate the package/documentation configuration to make Doxygen an optional build dependency
    - sphinx  # TODO: Separate the package/documentation configuration to make Sphinx an optional build dependency
    - numpy >=1.17 # TODO: Workaround for mpi failure (https://github.com/conda/conda-build/issues/4498)
  run:
    - eigen >=3.3.7
    - tardigrade_micromorphic_element >=1.4
    - moose-dev
    - libgcc-ng     # [linux]
    - libstdcxx-ng  # [linux]
    - libcxx        # [osx]

test:
  requires:
    - {{ compiler('cxx') }}
    - {{ pin_compatible('libgcc-ng') }}     # [linux]
    - {{ pin_compatible('libstdcxx-ng') }}  # [linux]
    - cmake >=3.18
    - boost >=1.59
    - doxygen  # TODO: Separate the package/documentation configuration to make Doxygen an optional build dependency
    - sphinx  # TODO: Separate the package/documentation configuration to make Sphinx an optional build dependency
  source_files:
    - run_tests
    - test/tests/kernels/const_mms/tests
    - test/tests/kernels/const_mms/*.i
    - test/tests/kernels/const_mms/gold/*.e
    - test/tests/kernels/linear_mms/tests
    - test/tests/kernels/linear_mms/*.i
    - test/tests/kernels/linear_mms/gold/*.e
    - test/tests/kernels/rotate_stretch/tests
    - test/tests/kernels/rotate_stretch/*.i
    - test/tests/kernels/rotate_stretch/gold/*.e
    - test/tests/kernels/simple_diffusion/tests
    - test/tests/kernels/simple_diffusion/*.i
    - test/tests/kernels/simple_diffusion/gold/*.e
    - test/tests/kernels/stretch_y/tests
    - test/tests/kernels/stretch_y/*.i
    - test/tests/kernels/stretch_y/gold/*.e
    - test/tests/kernels/stretch_y_plastic/tests
    - test/tests/kernels/stretch_y_plastic/*.i
    - test/tests/kernels/stretch_y_plastic/gold/*.e
  commands:
    - mkdir build-tests
    - cd build-tests
    - ./run_tests
