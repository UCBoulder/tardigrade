###############################################################################
################### MOOSE Application Standard Makefile #######################
###############################################################################
#
# Optional Environment variables
# MOOSE_DIR        - Root directory of the MOOSE project
#
###############################################################################
# Use the MOOSE submodule if it exists and MOOSE_DIR is not set
MOOSE_SUBMODULE    := $(CURDIR)/moose
ifneq ($(wildcard $(MOOSE_SUBMODULE)/framework/Makefile),)
  MOOSE_DIR        ?= $(MOOSE_SUBMODULE)
else
  MOOSE_DIR        ?= $(shell dirname `pwd`)/moose
endif

# framework
FRAMEWORK_DIR      := $(MOOSE_DIR)/framework
include $(FRAMEWORK_DIR)/build.mk
include $(FRAMEWORK_DIR)/moose.mk

################################## MODULES ####################################
# To use certain physics included with MOOSE, set variables below to
# yes as needed.  Or set ALL_MODULES to yes to turn on everything (overrides
# other set variables).

ALL_MODULES         := no

CHEMICAL_REACTIONS  := no
CONTACT             := no
FLUID_PROPERTIES    := no
HEAT_CONDUCTION     := no
ifeq (@overlap_coupling_FOUND@,1)
  MISC                := yes
else
  MISC                := no
endif
NAVIER_STOKES       := no
PHASE_FIELD         := no
RDG                 := no
RICHARDS            := no
SOLID_MECHANICS     := no
STOCHASTIC_TOOLS    := no
ifeq (@overlap_coupling_FOUND@,1)
    TENSOR_MECHANICS    := yes
else
    TENSOR_MECHANICS    := no
endif
XFEM                := no
POROUS_FLOW         := no

include $(MOOSE_DIR)/modules/modules.mk
###############################################################################

# dep apps
APPLICATION_DIR    := @PROJECT_BINARY_DIR@
ANACONDA_INCLUDE   := $(CONDA_PREFIX)/include
ANACONDA_LIB       := $(CONDA_PREFIX)/lib
APPLICATION_NAME   := tardigrade
BUILD_EXEC         := yes
GEN_REVISION       := no

###############################################################################
# Additional special case targets should be added here

ADDITIONAL_CPPFLAGS := $(ADDITIONAL_CPPFLAGS) -I$(ANACONDA_INCLUDE)
ifeq (@xdmf_FOUND@,1)
    ADDITIONAL_CPPFLAGS := $(ADDITIONAL_CPPFLAGS) -I@XDMF_INCLUDE_DIRS@
    ADDITIONAL_CPPFLAGS := $(ADDITIONAL_CPPFLAGS) -I@LIBXML2_INCLUDE_DIR@
    ADDITIONAL_CPPFLAGS := $(ADDITIONAL_CPPFLAGS) -I@BOOST_INCLUDE_DIR@
endif

ifeq (@additional_fetchcontent_flag@,1)
    ADDITIONAL_CPPFLAGS := $(ADDITIONAL_CPPFLAGS) @additional_fetchcontent_source_directories@
endif

ifeq (@additional_fetchcontent_flag@,1)
    ADDITIONAL_LIBS := $(ADDITIONAL_LIBS) @additional_fetchcontent_build_directories@
endif

ifeq (@overlap_coupling_FOUND@,1)
    ADDITIONAL_CPPFLAGS := $(ADDITIONAL_CPPFLAGS) -I@YAML-CPP_INCLUDE_DIR@
endif

ADDITIONAL_LIBS     := $(ADDITIONAL_LIBS) -lmicromat -lmicrobalance

ifeq (@overlap_coupling_FOUND@,1)
    for lib in @overlap_coupling_REQUIRED_LIBRARIES@; do\
        ADDITIONAL_LIBS     := $(ADDITIONAL_LIBS) -l$$lib
    done
endif

ifeq (@xdmf_FOUND@,1)
    for lib in @xdmf_REQUIRED_LIBRARIES@; do\
        ADDITIONAL_LIBS     := $(ADDITIONAL_LIBS) -l$$lib
    done
endif

ifeq ($(METHOD),dbg)
    ADDITIONAL_CPPFLAGS := $(ADDITIONAL_CPPFLAGS) -DDEBUG_MODE
    ADDITIONAL_LIBS := $(ADDITIONAL_LIBS) -DDEBUG_MODE
endif

include            $(FRAMEWORK_DIR)/app.mk
